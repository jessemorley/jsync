name: Build and Release JSYNC Backup

on:
  push:
    tags: ['v*']
  workflow_dispatch:  # Allow manual trigger for testing

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    runs-on: macos-14
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Compile AppleScript
        run: |
          echo "Compiling main.applescript to main.scpt..."
          
          # Ensure directories exist
          mkdir -p "Contents/Resources/Scripts"
          
          # Compile with error checking
          if ! osacompile -o "Contents/Resources/Scripts/main.scpt" "src/main.applescript"; then
            echo "Error: AppleScript compilation failed"
            exit 1
          fi
          
          # Verify compilation was successful
          if [ ! -f "Contents/Resources/Scripts/main.scpt" ]; then
            echo "Error: Compiled script not found"
            exit 1
          fi
          
          echo "Compilation successful"
          
      - name: Update version in Info.plist
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Setting version to: $VERSION"
          
          # Update version in Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $VERSION" Contents/Info.plist
          
      - name: Create script bundle for Capture One
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Create the script bundle structure
          mkdir -p "JSYNC Backup.scptd/Contents/Resources/Scripts"
          
          # Copy only the necessary files
          cp Contents/Info.plist "JSYNC Backup.scptd/Contents/"
          cp Contents/Resources/Scripts/main.scpt "JSYNC Backup.scptd/Contents/Resources/Scripts/"
          
          # Copy icon file if it exists
          if [ -f "Contents/Resources/jsync.icns" ]; then
            cp Contents/Resources/jsync.icns "JSYNC Backup.scptd/Contents/Resources/"
          fi
          
          # Set executable permissions
          chmod +x "JSYNC Backup.scptd/Contents/Resources/Scripts/main.scpt"
          
          # Create ZIP archive with ONLY the script bundle
          zip -r "JSYNC-Backup-v$VERSION.zip" "JSYNC Backup.scptd"
          
      - name: Generate release notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cat > release_notes.md << 'EOF'
          ## Installation
          1. Download and unzip the ZIP file
          2. Move `JSYNC Backup.scptd` to `~/Library/Scripts/Capture One Scripts/`
          3. The script will appear in Capture One's Scripts menu
          
          ## What's New
          - Real-time backup progress notifications
          - File count estimation and transfer speeds
          - Enhanced error handling and user feedback
          - Seamless Capture One integration
          
          ## Requirements
          - macOS 10.14 or later  
          - Capture One (any recent version)
          
          ## Usage
          1. Open Capture One with a session loaded
          2. Go to Scripts menu â†’ JSYNC Backup
          3. Choose backup location or use previously saved location
          4. Monitor progress via system notifications
          
          No security warnings - runs directly within Capture One!
          EOF
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            JSYNC-Backup-v*.zip
          body_path: release_notes.md
          name: "JSYNC Backup ${{ github.ref_name }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jsync-backup-build
          path: |
            JSYNC Backup.scptd/
            JSYNC-Backup-v*.zip